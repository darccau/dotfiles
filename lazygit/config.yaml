# ~/Library/Application Support/lazygit/config.yml
# https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#conventional-commit

gui:
  theme:
    lightTheme: false
    activeBorderColor:
      - "#7aa2f7" # bright blue
      - bold
    inactiveBorderColor:
      - "#3b4261" # subtle border
    optionsTextColor:
      - "#9aa5ce" # gray-blue
    selectedLineBgColor:
      - "#1f2335" # highlight background
    selectedRangeBgColor:
      - "#292e42"
    cherryPickedCommitBgColor:
      - "#414868"
    cherryPickedCommitFgColor:
      - "#7dcfff"
    unstagedChangesColor:
      - "#f7768e" # red-pink
    defaultFgColor:
      - "#c0caf5"
    searchingActiveBorderColor:
      - "#bb9af7"
    authorColors:
      - "#7aa2f7"
      - "#9ece6a"
      - "#bb9af7"
      - "#f7768e"
      - "#7dcfff"
      - "#e0af68"

  nerdFontsVersion: "3"
  showBottomLine: false
  border: "rounded"
  showIcons: true
  showFileTree: true

customCommands:
  # retrieved from: https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#conventional-commit
  - key: "<c-v>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "menu"
        key: "Breaking"
        title: "Breaking change"
        options:
          - name: "no"
            value: ""
          - name: "yes"
            value: "!"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."

  - key: "b"
    command: "git branch --merged main | grep -v '^[ *]*main$' | xargs -r git branch -d"
    context: "localBranches"
    loadingText: "Pruning..."
    description: "prune local branches that have been merged to main"

  - key: "G"
    command: |
      git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done
    context: "localBranches"
    description: "Prune local branches no longer on its remote; (G)one."
    loadingText: "Pruning gone..."
